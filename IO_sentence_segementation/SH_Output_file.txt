एआई मॉड्यूल 1
एआई क्या है , एआई तकनीक क्या है ?
परिचय
एआई या कृत्रिम बुद्धि की इससे जुड़ी कई परिभाषाएं हैं ।
नई किताब पढ़ें और नई परिभाषा हासिल करें ।
एआई , सरलतम शब्दों में , कठिन समस्याओं के समाधान का एक तरीका है ।
कठिन समस्या का अर्थ वह नहीं है जो तार्किक आवश्यकताओं के कारण कठिन है , बल्कि कंप्यूटर के डिजाइन के कारण ही कठिन है ।
उदाहरण के लिए , कारों के कुछ नमूने देखने और फिर एक वाहन को कार के रूप में वर्गीकृत करने के लिए मेरी चार - सिर वाली बेटी के लिए यह बहुत आसान है , लेकिन एक सामान्य कंप्यूटर प्रोग्राम कर सकते हैं ?
हममें से कई लोगों ने देखा है कि जब हम बरसों बाद किसी मित्र से मिलते हैं और उसे हर आयाम में विकसित पाते हैं , तब भी हम उसे पहचानने की स्थिति में होते हैं ।
अनुसंधानकर्ता ऐसे कार्यक्रमों पर काम कर रहे हैं जो साधारण फोटो पहचान सकते हैं और उसी के आधार पर निर्णय ले सकते हैं ।
जब तक चेहरा वैसा ही है जैसा उन्होंने काफी हद तक देखा है , उनके पास कोई मुद्दा नहीं है ।
समस्या तब शुरू होती है जब एक ही व्यक्ति की दो तस्वीरों के बीच महत्वपूर्ण अंतर होता है , जिसे अलग उम्र में या अलग पृष्ठभूमि में लिया जा सकता है .
शोधकर्ताओं को स्पष्ट कारणों से ऐसे प्रोग्राम लिखने में दिक्कतें आ रही हैं क्योंकि इन समस्याओं के समाधान के लिए कोई एल्गोरिथम नहीं जाना जाता ।
कठिन प्रोग्रामों की मेरी परिभाषा ये प्रोग्राम हैं जो स्वयं कंप्यूटर सिस्टम के डिजाइन के कारण कठिन हैं ।
मानव उन समस्याओं का समाधान कर सकता है क्योंकि उनकी सोच ऐसी समस्याओं के समाधान के लिए बेहतर है ।
यहाँ कुछ और उदाहरण दिए जा रहे हैं ।
जब कोई डॉक्टर कुछ ही मिनटों में किसी बीमारी की जांच और निदान कर सकता है तो एक रोबोट ( कंप्यूटर प्रोग्राम ) ऐसा करने के लिए तैयार क्यों नहीं है ?
जब एक औसत बुद्धिमान व्यक्ति टेबल टेनिस की तरह खेल खेलना सीख सकता है , क्यों एक रोबोट अभी तक ऐसा करने के लिए डिज़ाइन नहीं किया गया है ?
अगर मैं आपको बता दूं कि मैं कल रात फिल्म देखने गया था और मुझे शाहरुख़ का प्रदर्शन पसंद आया था , तो क्या आप इस बात का भी निष्कर्ष निकालेंगे कि मैं एक थिएटर में गया था , मैंने टिकट खरीदा था , फिल्म देखने के लिए अपना समय बिताया और वापस लौट आया ?
वास्तव में , आप यह भी निष्कर्ष निकाल सकते हैं कि मैं शाहरूख का प्रशंसक हूं और हो सकता है कि यह फिल्म अभी रिलीज हो रही हो , “हैप्पी न्यू ईयर” ।
आपको क्या लगता है कि अगर किसी कंप्यूटर प्रोग्राम को मुझसे कहा जाता है कि वह मेरा बयान सुने और उससे कारण पूछे ?
जिन समस्याओं पर विशेष ध्यान देने की आवश्यकता है
कंप्यूटर के लिए इन समस्याओं को हल करना कठिन क्यों है ?
मैं फिर कहता हूं कि ऐसी समस्याओं के समाधान के लिए कंप्यूटरों की डिजाइन नहीं है ।
मानवों के पास एनालॉग इनपुट हैं , एक प्रोसेसर है ( मस्तिष्क की गति बहुत धीमी है लेकिन समस्याओं को हल करने के लिए उच्च समानांतर एल्गोरिदम चलाता है (1010 न्यूरॉन्स औसतन 1000 कनेक्शनों के साथ अन्य न्यूरॉन्स , कुल 1014 कनेक्शन जो विशिष्ट दृष्टि संबंधी ऑडियो संबंधित हैं और अत्यधिक समानांतर प्रसंस्करण की आवश्यकता है )
उनमें सामान्य बोध होता है ( जैसा कि मैंने पहले फिल्म के विषय में लिखा है ) , वे अधूरी जानकारी के साथ काम कर सकते हैं ( मैंने फिल्म या थिएटर का नाम नहीं लिया था ) ।
वे भी बिना संरचनात्मक जानकारी के साथ काम कर सकते हैं ( के रूप में मैं एक लंबी अवधि के बाद अपने दोस्त को पहचान लिया है ? मैं वास्तव में यह नहीं जानता कि मैं स्वयं मानव मस्तिष्क सूचनाओं को इस तरह से संग्रहित करता हूं कि उस संघ का उपयोग करते हुए संबद्धता और जानकारी प्राप्त करना आसान हो जाता है । 
उदाहरण के लिए , अगर मैं आपको एक ऐसे अभिनेता का नाम पूछना चाहता हूं , जिसकी उम्र 70 साल से अधिक हो और चश्मे के साथ हो , तो आप सभी तुरंत जवाब देंगे कि मैं अमिताभ बच्चन के बारे में बात कर रहा हूं ।
अगर मैं अपनी बेटी से केजी का सवाल पूछूं , तो बिल्ली जैसी अजनबी के साथ एक टीवी सीरियल का नाम लूं , क्योंकि वह एक इंसानी लड़के की दोस्त है , तो उसे फौरन दून वापस बुला सकती है ।
एक मेहमान किसी लोकप्रिय गीत के संगीत के कुछ अंश बजा सकता है और आप उसे तुरंत “ आवारा हून” या “Indiwale” याद कर सकते हैं .
ये सब इस बात के उदाहरण हैं कि कैसे हम सूचनाओं को प्राप्त करने में असोसिएशन का इस्तेमाल करते हैं ।
हमारा दिमाग सूचनाओं को इस रूप में संग्रहित करता है कि इस तरह से सूचनाओं को प्राप्त करना हमारे लिए आसान है ।
आंकड़ों को खंडित करने की अपनी क्षमता के लिए विख्यात पारंपरिक डेटाबेस , संघों का उपयोग कर डेटा तक पहुंचने में अच्छे नहीं हैं .
एआईए या कृत्रिम बुद्धि का उद्देश्य कंप्यूटर प्रोग्राम लिखना है जो मानव मस्तिष्क की समस्या हल करने की क्षमताओं को प्रतिबिंबित कर सकता है ।
एरेलिना ने अपनी किताब में लिखा है - < s > बुद्धि ने उसे < s > प्रोग्रामों के अध्ययन के रूप में प्रस्तुत किया है , जिस क्षण में लोग रिच हो सकते हैं ।
एक और लेखक इसे कहते हैं कि “एआई बुद्धिमान कार्यक्रम लिखने के बारे में है” .
एक और परिभाषा है “एआई ऐसी संस्थाओं के निर्माण के बारे में है जो मनुष्यों की तरह समझ , समझ , भविष्यवाणी और हेरफेर कर सकती हैं” .
अंतिम परिभाषा कुछ ज्यादा ही रोचक है क्योंकि यह उन सत्ताओं की भी बात कर रही है जो मनुष्यों की तरह काम कर सकती हैं न कि केवल कार्यक्रम ।
अभी तक विज्ञान कथाओं में सीमित रोबोट्स एआई को वास्तविक दुनिया में लाने के तरीकों का अध्ययन है ।
अब तक , हमें पता है , यह वास्तव में संभव नहीं है .
आप भी सोच सकते हैं कि ऐसा क्यों है ?
वास्तव में , किसी भी समस्या को हल करने के लिए , हमें , सबसे पहले , यह जानना चाहिए कि वास्तविक समस्या क्या है ।
आइये इस बात को थोड़ा और समझने की कोशिश करें ।
आइए , हम फिर से अन्ना की परिभाषाओं में कूदें ।
मैंने प्रोग्रामों को सुव्यवस्थित करते हुए शब्द प्रयोग किया जबकि किसी अन्य व्यक्ति ने प्रोग्रामों को शब्दबद्ध करने के लिए शब्द प्रयोग किया ।
क्या आप दांतों को ब्रश करने पर विचार करते हैं या चाक की छड़ी उठाने पर विचार करना एक बुद्धिमान कार्य है ?
जब तक आप चाहते हैं कि आपका रोबोट ऐसा न करे , इन कार्यों में बुद्धि के उपयोग की आवश्यकता नहीं प्रतीत होती ।
वास्तव में , जब आप अपने रोबोट का निर्माण शुरू करते हैं , तो आपको टूथब्रश या गले की छड़ी लेने के लिए सही दबाव तय करना पड़ सकता है , एक मामूली गलत उच्चारण के परिणामस्वरूप यह टूट जाता है .
ब्रश करने की प्रक्रिया में यह भी आवश्यक है कि टूथब्रश की गति की दिशा और दबाव का निर्धारण किया जाए , जो चाहे कितना भी तुच्छ क्यों न हो , मानव के सिर को स्थिर समझे जाने पर भी उसका समाधान करना अत्यंत कठिन समस्या है ।
इस प्रकार , मैं “दिफिक प्रोग्राम्स” शब्द से चिपके रहता हूँ और “दैविक प्रोग्राम्स” नहीं .
लंबी कहानी को संक्षिप्त बनाने के लिए , एआई उन समस्याओं को हल करने के बारे में है जो कंप्यूटिंग के पारंपरिक तरीकों द्वारा हल करने के लिए मुश्किल हैं क्योंकि उन तरीकों को एक मानव मस्तिष्क की तरह कार्य करने के लिए डिज़ाइन नहीं किया गया है .
उपर्युक्त चर्चा से यह स्पष्ट है कि यदि हम कभी चाहते हैं कि कंप्यूटर प्रोग्राम्स या रोबोट्स ( जिनके अंतर्गत कंप्यूटर प्रोग्राम चल रहे हैं , उन कार्यों को करने में सफल हों जिन पर हमने अब तक चर्चा की है , तो हमें अपने कंप्यूटर सिस्टम या प्रोग्रामों को अलग से डिजाइन करने की आवश्यकता है ।
एआई , कंप्यूटर प्रणालियों और कार्यक्रमों की डिजाइनिंग का अध्ययन है जहां वे मानव की तरह अधिक प्रदर्शन कर सकते हैं और इसी तरह की समस्याओं को हल कर सकते हैं .
क्यों
एआई कोई नई विधा नहीं है ।
वास्तव में इसकी शुरुआत 60 के दशक में हुई जब कई शोधकर्ताओं ने यह जानने में दिलचस्पी लेना शुरू कर दिया कि मानव मस्तिष्क किस प्रकार कार्य करता है और मस्तिष्क के कथित मॉडल से मानव व्यवहार की भविष्यवाणी करना और स्वचालित कार्यक्रमों का प्रयोग करके मानव व्यवहार का अनुकरण करना ।
अब तक प्रस्तुत कई मॉडलों ने और कई शोध पत्रों ने कई शोधकर्ताओं को अपनी पीएचडी दी है और मेरे जैसे कई लोगों ने एआई को एक विषय के रूप में पढ़ाने से अपना जीवनयापन किया है ।
मानव की तरह काम करने वाली मशीन बनाने का अंतिम उद्देश्य अभी पूरी तरह पूरा नहीं हो पाया है ।
निश्चित भविष्य में भी इसका सामना होने की संभावना नहीं है ।
क्या इसका मतलब यह है कि हम एआई नहीं पढ़ना चाहिए ?
या एआई एक मृत अनुशासन है ?
नहीं
हमें समझ लेना चाहिए कि क्यों ?
यद्यपि अभी तक एआई का अध्ययन उस लक्ष्य को ठीक से प्राप्त नहीं कर सका जो उसने आरम्भ किया था ( और जो अभी भी प्राप्त करना चाहता है ) , लेकिन इसने कंप्यूटर विज्ञान के क्षेत्र में क्रांतिकारी समाधानों का योगदान किया है ।
उदाहरण के लिए , हम प्रोग्राम है जो दृश्य छवियों से यातायात संबंधित मापदंडों को खोजने और बुद्धिमान यातायात नियंत्रण प्रदान कर सकते हैं .
कुछ प्रोग्राम्स हैं जो लोगों के चेहरों को एक सीमा तक पहचान सकते हैं और “प्राकृतिक” जैसे विकल्प प्रदान कर सकते हैं जहाँ यह चेहरा मुझे “प्राकृतिक” में दिखाई देता है .
हस्ताक्षर पहचानने वाले प्रोग्राम आम हैं ।
समाधान जो पीडीएफ फाइलों को देखते हैं और पीडीएफ छवि के प्रत्येक अक्षर का वर्गीकरण करके उन्हें दस्तावेज़ फाइलों में परिवर्तित करते हैं , उपलब्ध हैं .
अभिगम नियंत्रण प्रणालियां जो बायोमाइट्रिक उपायों का प्रयोग करती हैं जैसे अंगूठा छाप , रेटिना स्कैनिंग या प्रमाणीकरण के लिए चेहरे की पहचान पहले से ही उपलब्ध हैं .
विशेषज्ञ प्रणालियों जो एक चिकित्सक की तरह वास्तव में काम करने में सक्षम नहीं हो सकता है लेकिन एक सहायक उपलब्ध हैं .
इस प्रकार , एआई ने अनेक उपलब्धियां हासिल की हैं ।
खेल - खेल के कार्यक्रमों की आज भारी मांग है ।
सबसे अधिक , यदि नहीं , एआई के किसी न किसी रूप का उपयोग करें .
डेटा के बड़े पैमाने पर देख सकते हैं और उन्हें परिभाषित कर सकते हैं उदाहरण के लिए नेटवर्क लॉग्स ( जो एक मामले की तरह है ) के लिए फेसबुक पोस्ट का विश्लेषण कर रहे हैं और यह निर्धारित करने के लिए कि कौन सी पार्टी बीमारी की संभावनाओं के बारे में भविष्यवाणी करने के लिए
सभी में , एआई ने कई चुनौतीपूर्ण समस्याओं के समाधान प्रदान किए हैं और यह भी संभव है कि वह क्या करने के लिए निर्धारित प्राप्त करने के बिना भी प्रदान करता है .
चर्चा की श्रृंखला में हमारा लक्ष्य यह जानना है कि एआई समस्याओं को कैसे सुलझाने का प्रयास करता है , बाधाएं क्या हैं और उन्हें कैसे दूर किया जाता है , और क्यों कुछ समस्याओं का समाधान अभी तक नहीं हुआ है ।
एआइ तकनीक
कठिन समस्याओं के समाधान के लिए हमें जिन तकनीकों का प्रयोग करना होगा , वे एआई तकनीक कहलाती हैं ।
एआई समस्याओं के कुछ सामान्य लक्षण हैं और एआई तकनीक उन्हें संभालने का प्रयास करना चाहिए .
यह एक सूची है ।
1
अधिकांश मामलों में , एआई समस्याओं के पास कोई एल्गोरिदम नहीं है .
उदाहरण के लिए हस्ताक्षर या पहचान की समस्याओं का सामना करना ।
हम किसी के चेहरे या हस्ताक्षर को पहचान सकते हैं लेकिन अगर पूछा जाए कि हमने किसी के चेहरे को कैसे पहचान लिया है तो हम जवाब नहीं दे सकते ।
२
कई अन्य मामलों में , प्रक्रिया सरल एल्गोरिथ्म है , लेकिन कई परिवर्तनों और संयोजनों के साथ .
उदाहरण के लिए , एक यात्रा विक्रेता समस्या अपने आप को मुश्किल नहीं है , लेकिन एक इष्टतम जवाब प्राप्त करने के लिए शहरों की एक उचित संख्या के साथ कंप्यूटर प्रणालियों के सर्वोत्तम तक पहुँचने के दायरे से बाहर है .
इसका दूसरा उदाहरण शतरंज का खेल है ।
एक सामान्य शतरंज कार्यक्रम दोनों पक्षों से औसतन 50 चाल है .
खोज वृक्ष का औसत शाखा कारक लगभग 35 है ।
इस जटिलता को देखते हुए , यदि एक शतरंज प्रोग्राम हर संभव विकल्प के लिए जाँच करता है एक बार प्रतिद्वंद्वी ने अपना पहला कदम बजाया है , यहां तक कि सबसे अच्छी कंप्यूटिंग प्रणाली के साथ , प्रतिद्वंद्वी के जीवनकाल में अपना पहला कदम नहीं उठा सकता .
मानव जीनोम मानचित्रण समस्या जिसे कंप्यूटर प्रोग्रामों द्वारा आज बहुत आसानी से संभाला जा रहा है , को 13 देशों ने मिलकर 6 वर्षों में पहली बार किया ।
गति अप ए एल्गोरिदम पर आधारित है जिसे मशीन अधिगम के रूप में जाना जाता है ।
स्लोन डिजिटल स्काई सर्वेक्षण एक अन्य परियोजना है जो एक समर्पित 2 का उपयोग करके बहुआयामी इमेजिंग और स्पेक्ट्रोमेट्रिक रीशिफेट सर्वेक्षण इकट्ठा करता है .
5 मीटर चौड़ी ऑप्टिकल टेलिस्कोप , लगभग 500 मिलियन खगोलीय वस्तुओं और स्पेक्ट्रमों के बारे में 3 मिलियन से अधिक वस्तुओं के लिए फोटोमेट्रिक प्रेक्षणों का संग्रह ।
यहां लगभग 35 फीसद आसमानी बारिश हो चुकी है ।
पूरा डाटा एक मशीन लर्निंग प्रोग्राम को दिया जाता है और खगोल विज्ञानियों को मुफ्त में उपलब्ध होता है ।
३
कई अन्य मामलों में , हम सबसे अच्छा जवाब नहीं चाहते हैं , लेकिन जवाब है जो स्वीकार्य हैं .
उदाहरण के लिए , अगर हम किसी फिल्म में जाने की योजना बना रहे हैं तो हम सबसे अच्छी फिल्म या बेहतरीन थिएटर या बेहतरीन अभिनेता या अभिनेत्री का फैसला नहीं करते ।
हम अपनी कुछ उम्मीदों के साथ किसी भी फिल्म में जाएंगे ( एक अच्छी वाजिब कहानी की तरह , या कुछ मनोरंजन आदि से संतुष्ट हैं ।
इस तरह के उत्तर पारंपरिक कंप्यूटिंग प्रणालियों द्वारा प्राप्त करने के लिए कठिन हैं .
४
पारंपरिक कार्यक्रमों में आमतौर पर सीखने के घटक नहीं होते हैं .
यदि मनुष्य सही ढंग से शिक्षा प्राप्त कर ले तो वह कुछ भी सीख सकता है ।
यदि हम प्रोग्रामिंग पद्धति में ऐसी क्षमता रखते हैं तो हमें किसी अन्य वस्तु की आवश्यकता नहीं होती ।
5
कई एआई प्रोग्राम की एक अन्य महत्वपूर्ण आवश्यकता को स्पष्टीकरण सुविधा कहते हैं .
यदि एक मानव चिकित्सक मुझे मलेरिया से निदान करता है , उदाहरण के लिए , मैं निश्चित रूप से पूछना " कैसे कह सकते हैं , डॉक्टर ? " एक डॉक्टर यह कहते हुए वापस जवाब दे सकता है कि “अपने लाल रक्त कोशिका गिनती की आवश्यकता से कम है” 
एक कंप्यूटर प्रोग्राम की प्रतिक्रिया काफी दिलचस्प हो सकती है .

एआई ने लगभग सभी उपरोक्त समस्याओं के समाधानों का प्रयास किया है और सफल तरीके से और भी बहुत कुछ ।
इन समस्याओं के समाधान के लिए उसे अपनी तकनीक खोजनी होगी ।
इन तकनीकों को एआई तकनीक कहा जाता है .
आइए समझने की कोशिश करें कि ये एआई तकनीकें क्या हैं और वे वास्तव में इन समस्याओं के समाधान में कैसे मदद कर सकती हैं ।
उग्र आधारित खोज
जिस अखिल भारतीय पद्धति की हम पहले चर्चा करते हैं , उसे हीरवादी - पस्त खोज कहते हैं ।
अधिकांश समस्याएं मनुष्यों द्वारा हल की जाती हैं , जिनमें से एक इष्टतम समाधान की मांग की जाती है , तो इसे हल करना असंभव होगा .
उदाहरण के लिए , शतरंज जैसे खेल में वास्तविक समय में किसी भी मानव के लिए असंभव सही मायने में विचार करने के लिए कई विकल्प हैं .
एक मानव खिलाड़ी वास्तव में सभी चालों का एक बहुत ही छोटा सबसेट मानता है और उन्हें मूल्यांकन करता है .
साथ ही , वह कुछ से ज्यादा चालों को डाउन नहीं मानता ।
उदाहरण के लिए , वह सोच सकता है कि जिस चाल से वह खेलने की योजना बना रहा है , उसका विरोधी क्या करेगा , वह उस पर कैसे प्रतिक्रिया देगा , आदि कुछ चालों के लिए .
वह पूरे खेल को नहीं मानता ।
कई चालें ( जिन्हें खेल खेल में स्प्लिट कहा जाता है ) खेल की स्थिति के आधार पर तय की जाती हैं ( जैसे प्रतिद्वंद्वी नाइट दो अलग दिशाओं में ले जा सकती है , एक वह जो राजा या रानी को डराता है और दूसरा कोई महत्वपूर्ण टुकड़ा पकड़ सकता है । आमतौर पर किसी भी समय पर हम उनमें से केवल एक को बचा सकते हैं , जांच की संभावना ( क्योंकि हमारे राजा पर आक्रमण होता है ) आदि । 
मानव खिलाड़ी अपने स्वयं के नियमों का विकास करते हैं ( हम इसे समय के साथ शतरंज की तरह खेल खेलने के लिए अलौकिक ज्ञान कहते हैं ) ।
वे भी समय के किसी भी बिंदु पर उपलब्ध विकल्पों से एक बेहतर चाल निर्धारित करने के लिए अपने ज्ञान का उपयोग करें .
इन नियमों का उपयोग करते हुए , वे अत्यधिक उपयोगी विकल्पों को समाप्त कर देते हैं और उनसे चुनने के लिए चालों के जबरदस्त संयोजन से बच सकते हैं .
मानव इस विधि का प्रयोग करता है कि वह क्या करता है के अधिकांश समस्या समाधान में तीक्ष्णता का उपयोग करें .
उदाहरण के लिए , जब एक चिकित्सक रोगी की जांच करता है , वह उसे रोगों के सभी संभव मामलों के लिए जाँच नहीं करता है और वास्तविक रोग के निर्धारण के लिए सभी संभव नैदानिक परीक्षणों की पेशकश नहीं करता है .
एक चिकित्सक को इस बात का ज्ञान हो सकता है कि रोगी कहां रहता है , वह क्या करता है , रोगी के अन्य महत्वपूर्ण गुण ( उदाहरण के लिए कि वह तनावपूर्ण जीवन व्यतीत कर रहा है या किसी गंदी जगह के पास रह रहा है आदि आदि आदि ।
जब रोगी रिपोर्टिंग कर रहा होता है , उदाहरण के लिए , यदि वह वर्षा ऋतु में रिपोर्टिंग कर रहा होता है , उस क्षेत्र में कई मच्छर , उस क्षेत्र में प्रमुख प्रकार की बीमारियों आदि के बारे में भी उसे कुछ पता होता है ।
वह रोगी के इतिहास के बारे में भी जानता है और शायद रोगी के संभावित रोग के बारे में जानने के लिए अपने परिवार के इतिहास के बारे में थोड़ा जानता है .
इस ज्ञान से , वह नियमों का गठन किया है और उनका उपयोग परीक्षण करने के लिए अपना ध्यान निर्धारित करने के लिए अगर सबसे संभावित रोग दोषी है .
उदाहरण के लिए बरसात के मौसम में और रोगी को कई मच्छरों के साथ एक क्षेत्र में छोड़ दिया , यदि रोगी को शरीर में दर्द और सिरदर्द की शिकायत होती है तो वह पहले मलेरिया की जांच कर सकता है ।
गर्मियों के दौरान , वह दूसरे रास्ते के आसपास लगता है और एक गले के संक्रमण के लिए जाँच और इतने पर .
ऐसे विशेषज्ञों द्वारा बनाए गए नियम उन्हें सही निदान पर जल्दी ही शून्य कर देते हैं ।
वे सभी संभावित कारणों और कारणों के संयोजन के लिए व्यवस्थित जांच की जरूरत नहीं है .
वास्तव में , एक मानव को विशेषज्ञ माना जाता है अगर वह इतना डोमेन ज्ञान है .
यदि कोई विशेषज्ञ की कार्य शैली के बारे में थोड़ा आगे सोचता है तो वह स्पष्ट रूप से प्रत्येक विशेषज्ञ के साथ दो अलग - अलग प्रकार के कौशल सेटों को देख सकता है ।
एक तो यह कि सामान्य समस्या हल करने का कौशल जिसके द्वारा सभी विशेषज्ञ इस समस्या का समाधान करते हैं ।
दूसरा और अधिक महत्वपूर्ण यह डोमेन ज्ञान है .
विज्ञान अंगूठे के नियम हैं जो डोमेन के बारे में विशेषज्ञ के ज्ञान का प्रतिनिधित्व करते हैं .
बेहतर मौसमविज्ञान के साथ एक विशेषज्ञ एक बेहतर विशेषज्ञ है .
विशेषज्ञ की तीक्ष्णता उनकी शक्ति और निदान करने की क्षमता का प्रतिनिधित्व करती है ।
कंप्यूटरीकृत विशेषज्ञ प्रणालियां जो नकलची विशेषज्ञों की कोशिश करती हैं , उन्हें अपनी प्रणाली के अंग के रूप में इन उपकरणों का होना चाहिए ।
न केवल तंत्र से संबंधित जानकारी को संग्रहीत करना बल्कि निर्णय लेने में उनका उपयोग करना भी हर अखिल भारतीय पद्धति का एक महत्वपूर्ण अंग है ।
तो एक एआई प्रणाली की पहली महत्वपूर्ण विशेषता यह है कि यह खोज को कम करने और वास्तविक समय में समस्या का समाधान करने में मदद कर सकता है के सेट है .
कोई भी तकनीक जो तंत्र में हीरविज्ञान को शामिल करने में सक्षम बनाती है और विकल्पों की संख्या को कम करने और वास्तविक समय में समाधान खोजने की प्रक्रिया में उनका उपयोग करने की अनुमति देती है , एक एआई तकनीक है .
कभी - कभी अन्य नामों से , उदाहरण के लिए , जेनेटिक एल्गोरिथम के क्षेत्र में , उत्साही को फिटनेस फंक्शन के रूप में जाना जाता है .
एक फिटनेस फंक्शन बताता है कि कैसे समाधान उपयोगकर्ता की परिभाषा के अनुसार फिट है .
फर्जी समाधान रखे जाते हैं और दूसरों को बाहर फेंक दिया जाता है ।
प्रक्रिया को तब तक दोहराया जाता है जब तक आवश्यक विशेषताओं के साथ समाधानों का अंतिम सेट नहीं मिल जाता .
अनुकरण की प्रक्रिया में , अलौकिक को वस्तुगत फलन के रूप में जाना जाता है ।
खेल खेल खेल एल्गोरिदम में यह स्थैतिक मूल्यांकन समारोह के रूप में जाना जाता है .
ज्ञान निरूपण और अनुमान
किसी भी एआई प्रणाली का एक अन्य महत्वपूर्ण हिस्सा प्रणाली और एक प्रक्रिया के बारे में ज्ञान का प्रतिनिधित्व करने की विधि है जो निर्णय लेने के लिए उस ज्ञान के हेरफेर की अनुमति देता है .
उदाहरण के लिए , कई वर्तमान प्रणालियों , विशेष रूप से बड़े डेटा प्रणालियों के लिए , सोशल मीडिया वेबसाइटों जैसे फेसबुक और ट्वीटर से आने वाली पाठ - वर्गीकृत सूचना के संसाधन की आवश्यकता होती है .
एक उत्पाद आधारित कंपनी का उदाहरण लें ।
कंपनी वेब और पदों के अपने उपयोगकर्ताओं का विश्लेषण करने के लिए कड़ी मेहनत करता है सामाजिक मीडिया पर और लगता है कि अगर कोई टिप्पणी उत्पाद ( प्रतिद्वंद्वी उत्पाद के बारे में है .
“यह बाइक शानदार है , मैं इसे 18 घंटे के लिए चला गया और यह कोई समस्या नहीं थी !” , या “मैं सवारी के 12 घंटे के बाद भी बहुत आरामदायक महसूस कर रहा हूँ” पारंपरिक ग्राहक फीडबैक फार्म की तुलना में उत्पाद के बारे में बहुत कुछ बता सकते हैं .
इसके विपरीत , वाशिंग मशीन हर महीने टूट जाता है , या " - यह सेवा केंद्र व्यस्त प्रतिक्रिया देता है कॉल करने के लिए और ईमेल करने के लिए जवाब नहीं कर रहे हैं हमेशा चेतावनी संकेत हैं .
एक अच्छा प्रोग्राम है जो उपयोगकर्ता पोस्टिंग है पाठ का विश्लेषण कर सकते हैं पता चलता है अगर उस पोस्ट का कंपनी के उत्पाद से कोई संबंध है , और अगर ऐसा है , तो पता चलता है कि टिप्पणी सकारात्मक या नकारात्मक ग्राहक संबंध विभाग के लिए अत्यंत सहायक हो सकता है .
दुर्भाग्य से , इस मामले में सबसे बड़ी बाधा , पाठ के विश्लेषण के लिए एक अच्छी विधि है , इसे एक ऐसे रूप में संग्रहीत कर रहा है जो हमें किसी चीज को आसानी से डिकोड करने में मदद कर सकता है .
ऐसे कई तरीके प्रस्तावित हैं जो इसे एक समस्या के लिए हल कर सकते हैं लेकिन दूसरे पर ध्यान देने में विफल रहते हैं .
उदाहरण के लिए , एक मानव इन सभी मिठाईयों को पढ़ सकता है और ऐसी अन्य सूचनाएं भी एकत्र कर सकता है जो स्वचालित प्रोग्राम के रूप में प्रस्तुत नहीं की गई है कि अधिकांश समस्याओं की रिपोर्ट एक विशिष्ट वाशिंग मशीन मॉडल के बारे में है या सेवा स्टेशन की एक विशिष्ट शाखा से संबंधित है ( जिससे ग्राहक वाशिंग मशीन का उपयोग कर रहा है ।
क्या स्वचालित तंत्र ऐसा कर सकता है ?
किसी भी प्रणाली के लिए समस्या को अलग तरीके से हल करना मुश्किल होता है क्योंकि यह मूल रूप से करने के लिए डिज़ाइन किया गया है .
यहाँ सबसे बड़ी चुनौतियों में से एक है ज्ञान का एक ऐसे रूप में प्रतिनिधित्व जहां इस तरह के प्रसंस्करण संभव है .
वास्तव में , यह भी एक उदाहरण है कि मनुष्य अपने ज्ञान से अनुमान लगा रहा है कि उसके पास जो ज्ञान है , उस पर निर्माण किया जा सकता है ।
उदाहरण के लिए , वे ग्राहकों द्वारा tweets के विवरण को देखते हैं और अनुमान है कि ब्रांड Y मॉडल X में Z की एक आवर्ती समस्या है .
उनके पास जो ज्ञान है , उससे यह अतिरिक्त है ।
ज्ञान निरूपण को भी अनुमान लगाने और ज्ञान भंडार में वृद्धि करने की अनुमति देनी चाहिए ।
किसी भी तकनीक जो प्रणाली को प्रक्रिया और मौजूदा ज्ञान से निष्कर्ष की अनुमति देता है एक एआई तकनीक है .
वर्तमान में , एआई , मशीन लर्निंग की एक शाखा ठीक उसी तरह कर रही है जैसा हम ऊपर वर्णित कर रहे हैं .
यह डेटा की भारी मात्रा को देखता है , डेटा से पैटर्न की खोज करता है और ऊपर की तरह निष्कर्ष .
यह निष्कर्ष और भंडारण और ज्ञान क्षमताओं की पुनर्प्राप्ति भी मानव समस्या समाधानकर्ताओं के एक महत्वपूर्ण गुण का संकेत देते हैं , वे अपने अनुभव से सीखते हैं और नियमित रूप से किसी भी कार्य का अभ्यास करते हुए बेहतर होते हैं ।
एक एआई तकनीक जो सिस्टम को पिछले अनुभव से सीखने में मदद कर सकता है एक एआई तकनीक है .
कई एआई तकनीकें सीखने के लिए इस्तेमाल की जाती हैं .
प्रणालियों का एक बड़ा वर्ग सीखने के लिए तंत्रिका नेटवर्क आधारित प्रणालियों का उपयोग करता है .
तंत्रिका नेटवर्क आधारित प्रणालियां मानव मस्तिष्क के कार्य को उसी भौतिक संरचना के उपयोग से नकल करती हैं जिसमें मस्तिष्क का आयोजन किया जाता है
तंत्रिका नेटवर्क प्रणाली का उपयोग करने के तरीकों को BPN (Backpropgation neur नेटवर्क , मार्कोव मॉडल , Hopfield नेटवर्क और कुछ और अधिक के रूप में जाना जाता है .
एक अन्य क्षेत्र जहां सीखने के समान रूप से महत्वपूर्ण है आनुवंशिक एल्गोरिदम के रूप में जाना जाता है , जो पारिस्थितिकी तंत्र के अस्तित्व के लिए उपयोग किए जाने वाले समाधानों के पैटर्न पर आधारित हैं .
उनके पास सीखने का एक मजबूत घटक भी होता है ।
मशीन अधिगम , जैसा कि इसके नाम से पता चलता है , मशीनों के लिए स्वचालित रूप से सीखने के तरीकों के बारे में है .
इन मॉडलों का उपयोग कर ज्ञान का प्रतिनिधित्व करने के लिए एक उत्कृष्ट उपकरण है मैटलैब .
BPN और अन्य तंत्रिका नेटवर्क मॉडलों का प्रतिनिधित्व करने के लिए लाइब्रेरी मैटलैब में उपलब्ध हैं और एक प्रोग्रामर आसानी से मैटलैब का उपयोग कर हस्ताक्षर पहचान जैसे प्रोग्राम लिख सकता है .
अभ्यास में प्रयुक्त अन्य शिक्षण पद्धति तर्क आधारित दृष्टिकोण का प्रयोग करती है .
प्रोलोग नाम की भाषा को केवल प्राडिक तर्क के आधार पर डिजाइन किया गया था और यह पुराने ज्ञान के आधार पर काफी शक्तिशाली है ।
यह ज्ञान को भंडारित करने के लिए तर्क फार्म का उपयोग करता है और इस प्रकार प्रोग्राम को पुराने आंकड़ों से अनुमानित करने में सक्षम बनाता है .
आइए समझने के लिए एक उदाहरण लेते हैं ।
मान लीजिए कि निम्नलिखित अभिरक्षक दिए गए हैं ।
1
माता ( देवकी , कृष्ण )
२
भाई
३
ममा
ऊपर वर्णित तीन उपदंशों का प्रयोग करके कृष्ण ने जो लीला की है , उसे सिद्ध किया जा सकता है ।
प्रोलोग में ज्ञान के दो प्रकार होते हैं ।
पहले दो कथन तथ्यों का प्रतिनिधित्व करते हैं और तीसरे एक नियम का प्रतिनिधित्व करते हैं ।
एक तथ्य एक संबंध के बारे में सरल ज्ञान है ( दो इकाइयों के बीच माँ का नाम देवकी और कृष्ण के बीच का संबंध ) उदाहरण के लिए कुछेक संस्थाओं के बीच का संबंध ।
नियम ज्ञान का एक और प्रकार है ।
एक नियम में वे चर होते हैं जो मूल्यों को ग्रहण कर सकते हैं ( उदाहरण के लिए नियम mamX , Y , दोनों X और Y वे चर होते हैं जो कंस और कृष्ण जैसे विभिन्न मूल्यों को ग्रहण कर सकते हैं ।
ज्ञान निरूपण के लिए एक और इसी प्रकार की विधि फ्रेम कहलाती है ।
वे वस्तुनिष्ठ ज्ञान निरूपण का प्रथम संस्करण हैं ।
अनेक वर्तमान भाषाओं , जिनमें अधिकांशतः जावा और सी + + + फ़्रेम का उपयोग करते हुए ज्ञान निरूपण का समर्थन कर सकते हैं ।
उदाहरण के लिए , हम छात्रों और ऑब्जेक्ट फ्रेम नाम के एक वर्ग फ्रेम हो सकता है रमेश जो एक वास्तविक छात्र है और निर्दिष्ट कर सकते हैं कि रमेश टाइप के छात्र की वस्तु है .
एक वर्ग फ्रेम में गुण होते हैं ( उदाहरण के लिए फ्रेम विद्यार्थी के पास कुछ गुण हो सकते हैं जैसे कि ऑब्जेक्ट उन्मुख प्रोग्रामिंग भाषाओं में स्थैतिक सदस्यों का प्रयोग करते हुए वस्तु की कुल संख्या ( एआईएनए के रूप में ) ।
रमेश जैसी वस्तु फ्रेम में एक वर्ग के गैर - स्थैतिक सदस्यों के गुण होते हैं ।
एआई के अनुप्रयोग के बढ़ते क्षेत्रों में से एक सॉफ्टवेयर रोबोट का उपयोग है .
ये रोबोट ( जो कभी - कभी सूअर कहलाते हैं ) सॉफ्टवेयर मोबाइल कंपनियाँ हैं ।
वे एक मशीन से दूसरे मशीन में यात्रा करते हैं और सूचनाओं को एकत्रित कर उनकी व्याख्या करते हैं ।
इस मॉड्यूल के लेखक ने पीएचडी के दौरान एक प्रणाली विकसित की है .
काम करता है जो मोबाइल एजेंटों जो लक्षित मशीनों के लिए जा सकते हैं , घुसपैठ की जानकारी इकट्ठा और वापस आ .
प्रेषक ऐसे सभी मोबाइल एजेंटों और डीडयूस से जानकारी एकत्रित करता है यदि सिस्टम में कहीं कोई घुसपैठ है या नहीं .
यह पता लगाने के लिए कि उपयोगकर्ता के पास दुर्भावनापूर्ण इरादे हैं या नहीं , इस तरह की प्रणालियां व्यवहार - पस्त करने वाले उपकरणों का उपयोग करने के लिए काफी सहायक हैं .
ज्ञान निरूपण का एक अन्य रूप है किसी प्रकार के इकाई संबंध आरेख का उपयोग करना ।
सेमुअल नेट , वैचारिक निर्भरता , और कुछ अन्य तरीकों का उपयोग ज्ञान का प्रतिनिधित्व करने के लिए किया जाता है .
वास्तव में , ऑब्जेक्ट -बेस्ड प्रतिनिधित्व का उपयोग भी ज्ञान प्रतिनिधित्व योजनाओं के साथ संयोजन और वास्तव में प्रयोग किया जा सकता है .
इस प्रकार के ज्ञान को ग्राफ के रूप में निरूपित किया जाता है जहां नोड्स इकाइयों का प्रतिनिधित्व करते हैं जबकि चाप उनके बीच संबंधों का प्रतिनिधित्व करते हैं ।
प्रत्येक नोड , के रूप में के रूप में अच्छी तरह से संबंध , वस्तुओं के रूप में प्रतिनिधित्व किया जा सकता है .
वास्तव में , विशेष भाषाओं जो फ्रेम का उपयोग कर प्रत्यक्ष प्रतिनिधित्व प्रदान करता है जहां प्रस्तावित और एक छोटे से सीमा तक इस्तेमाल किया .
हालांकि , अधिकांश डिजाइनर जावा जैसी सामान्य प्रयोजन भाषाओं का उपयोग करना पसंद करते हैं .
हेरफेर और अनुमान के लिए ज्ञान प्रतिनिधित्व की अनुमति देने वाली तकनीक भी एआई तकनीक है .
वास्तव में , आवश्यकताओं है कि हम सूचीबद्ध सभी है जो उपयोगकर्ताओं को सतह पर देख सकते हैं .
इन आवश्यकताओं का समर्थन करने के लिए , कंप्यूटिंग प्रणालियों कई अन्य आवश्यकताओं को प्रदान करने की आवश्यकता है .
एआई तकनीक , सामान्य रूप से , ज्ञान प्रतिनिधित्व , अनुमान , सीखने और मानवविज्ञान के साथ प्रोग्रामिंग में मदद करनी चाहिए .
ज्ञान विस्तार के लिए सीखने की आवश्यकता स्पष्ट है ।
वास्तव में सौदों की एक महत्वपूर्ण शाखा सूचना एकत्र करने के लिए सीखने की प्रक्रिया को स्वचालित करती है ।
वह जानकारी आगे के प्रसंस्करण के लिए इस्तेमाल किया जाना है .
स्वचालित अधिगम की वह प्रक्रिया मशीन अधिगम कहलाती है ।
एक अन्य क्षेत्र जहां अधिगम अधिक महत्वपूर्ण है , को केस - बेस्ड तर्क के रूप में जाना जाता है .
जब भी किसी मनुष्य को कोई समस्या आती है , तो वह इस बात का मिलान करने की कोशिश करता है कि अन्य समस्याओं के साथ वह पहले ही हल कर चुका है और यदि उसे पूर्ण या निकट का मिलान मिल जाए तो उसी दृष्टिकोण का उपयोग करने की कोशिश करता है ।
अधूरी जानकारी के साथ कारण
वास्तव में , कई एआई कार्यक्रमों को कुछ और की जरूरत है .
उदाहरण के लिए , अधिकांश मानव अधूरी जानकारी के साथ तर्क कर सकते हैं .
वे अनुमान लगा सकते हैं और काम कर सकते हैं ।
बाधा संतुष्टि समस्याओं के रूप में जाना जाता समस्याओं का एक सेट है जो ऐसी योग्यता की मांग करता है .
उदाहरण के लिए , हम कई नई सुविधाओं के साथ एक नया मोबाइल मिल सकता है .
हम कुछ मान सकते हैं और कोशिश कर सकते हैं , अगर असफल हो गए तो हम कुछ और मान लेते हैं और कोशिश करते हैं ।
आमतौर पर , हमारे पिछले अनुभव के आधार पर , हम ज्यादातर बातें सही मान सकते हैं और बहुत कम समय में मोबाइल का उपयोग करना सीख सकते हैं .
आइये इस समस्या को थोड़ा गहरे स्तर तक ले जायें ।
मान लीजिए हम यह पता लगाना चाहते हैं कि नए मोबाइल का इस्तेमाल करके अलार्म कैसे लगाया जाए ।
हम पहले सेटिंग खोजने की कोशिश करेंगे ।
( यह हमारे अनुभवों पर आधारित है कि इस प्रकार की विशेषताएं स्थापित होने के कारण
मान लीजिए कि सेटिंग के तहत हम निम्नलिखित मेनू खोजते हैं , संपर्क , कनेक्शन्स , खाते और अधिक , हम कौन चुनेंगे ?
हम में से अधिकांश फोन का चयन करें क्योंकि घड़ी किसी भी अन्य मेनू की तुलना में इसका हिस्सा होने की संभावना है .
मान लीजिए कि हम इसे फोन के नीचे नहीं पा सकते हैं , तो हम और अधिक के रूप में यह अगले सबसे अच्छा विकल्प हो सकता है एक मेनू की कोशिश कर सकते हैं .
हम क्या कर रहे हैं कुछ मान रहे हैं ( उदाहरण के लिए फोन मेनू डिजाइनर कुछ तार्किक अनुक्रम का पालन कर रहे हैं और इसके लिए जाँच .
यह काफी संभव है कि किसी सेटिंग में घड़ी या अलार्म से संबंधित जानकारी न हो और वह कहीं और हो ।
अधिकांश मामलों में , हम कुछ बाधाओं को समझते हुए और तदनुसार खोज प्रक्रिया का पालन करते हुए अलार्म संबंधित जानकारी खोजने में सक्षम हो जाएगा .
एक अन्य उदाहरण ध्वनि या बोलचाल के आदेशों के रूप में उपयोगकर्ता इनपुट का प्रसंस्करण है .
कभी कभी ध्वनि इनपुट दो मदों के साथ मेल खाता है .
किस मद का चुनाव करना है , इसका निर्णय संदर्भ के आधार पर किया जाता है ।
कभी - कभी हमें भी ऐसी ही समस्या का सामना करना पड़ता है , जब मोबाइल कॉल स्पष्ट रूप से नहीं आ रही हो और हम दूसरी पार्टी की आवाज साफ तौर पर नहीं सुन सकते ।
हम शब्दों या कभी कभी पूरे वाक्यों को मिस कर सकते हैं लेकिन फिर भी लापता शब्द या वाक्य को परखने की हमारी क्षमता के आधार पर संवाद कर सकते हैं ।
एक और उदाहरण है डोमेन हम सभी के साथ संलग्न करने के लिए प्यार करता हूँ , खेल .
ताश का एक सरल खेल काफी हद तक यह मान लेने की हमारी क्षमता पर निर्भर करता है कि अन्य खिलाड़ी के कार्ड मूल्य क्या हैं .
हमारे पास वह जानकारी नहीं है , लेकिन जो जानकारी हमारे पास है , उसे हम ग्रहण कर आगे बढ़ सकते हैं ।
इस प्रकार मान्यताओं का उपयोग कर अधूरी जानकारी के बावजूद जारी रखने की क्षमता एक एआई कार्यक्रम की एक महत्वपूर्ण आवश्यकता है .
एक तकनीक जो प्रोग्राम को अधूरी जानकारी के साथ काम करने में सक्षम बनाती है एक एआई तकनीक है .
दोष सह्यता
एक एआई प्रणाली की एक और महत्वपूर्ण विशेषता कभी कभी की आवश्यकता है दोष सहिष्णुता .
हम न केवल अधूरी जानकारी के साथ काम करते हैं बल्कि गलत जानकारी के साथ भी काम करते हैं ।
उदाहरण के लिए , यदि आप किसी स्कूल के लड़के से कोई प्रश्न पूछते हैं - “नाम मछली जो शार्क से बड़ी होती है और उसके फेफड़े होते हैं” ।
स्कूल के अधिकांश बच्चे जवाब देंगे “मुझे लगता है कि आप व्हेल के लिए पूछ रहे हैं , लेकिन यह एक मछली नहीं है , यह एक स्तनधारी है” .
हमने गलत या गलत जानकारी दी लेकिन एक स्कूल का बच्चा न केवल सही जवाब दे सकता है , हमारी गलती के बारे में जानने में भी मदद कर सकता है ।
मैं एक और उदाहरण उद्धृत करता हूँ ।
मैं एक ऐसे मित्र की तलाश कर रहा था जिसने मुझे फोन पर बताया कि वह ‘आराटलम’ नामक समाज में रहता है ।
उसे खोजते समय मैंने पास ही स्थित एक पानवाला से पूछा , “मैं रतलामी नाम का समाज कहाँ खोज सकता हूँ ? ”
पैनल ने जवाब दिया , "शिर , पास ही सतनाम नामक एक समाज है , आप वहां बेहतर जांच करें । "
क्या कुछ ऐसा है जो हमें आश्चर्यचकित करता है ?
यदि आप एक एआई शिक्षक या शोधकर्ता हैं , तो आप हैं .
मैंने पूरी तरह से गलत जानकारी दी है लेकिन मुझे सही जवाब मिला ( मैं अपने दोस्त को वास्तव में उस समाज से पता लगा सकता था ।
वह पानवाले का मस्तिष्क कैसे पता लगा सकता था ?
इसका कारण यह है कि रतलाम और सतनाम दोनों अलग - अलग दिखते हैं , वे एक जैसे लगते हैं ।
क्या हमारे एआई -बेस्ड प्रोग्राम्स ऐसा हो सकते हैं ?
कुछ प्रोग्राम वास्तव में ऐसा करने में सक्षम हैं और दोष सहिष्णुता प्रदर्शित करते हैं .
सभी प्रोग्राम्स को इस गुण की आवश्यकता नहीं है , हालांकि
सारांश
जो कुछ हमने सीखा है , उसे हम जल्दी से वापस ले लें ।
एआई एक ऐसी विधा है जहां हम कठिन प्रोग्राम लिखना सीखते हैं ।
इस प्रकार के कार्यक्रमों की कठिनाई मनुष्यों की तरह कार्य करने की क्षमता में निहित है , जब कोई प्रत्यक्ष समाधान उपलब्ध नहीं है या अन्धाधुन्ध रूप से खोज करने से समय की एक अत्यधिक मात्रा उत्पन्न होगी ।
प्रोग्राम्स को कभी स्पष्टीकरण सुविधाओं की आवश्यकता होती है और कभी कभी दोष सहिष्णुता की .
कभी - कभी अपर्याप्त जानकारी के साथ कार्य करने के लिए प्रोग्राम की योग्यता भी मायने रखती है .
एआई समर्थन की जरूरत के कई कार्यक्रमों में से एक महत्वपूर्ण विशेषता सीखना है .
तंत्रिका नेटवर्क आधारित अधिगम पद्धतियां आज बहुत लोकप्रिय हैं ।
जिन तकनीकों से प्रोग्राम को उपरोक्त सभी योग्यताएं प्राप्त होती हैं उन्हें एआई तकनीक कहते हैं ।
हम इनमें से कई का अध्ययन यथासमय करेंगे ।

